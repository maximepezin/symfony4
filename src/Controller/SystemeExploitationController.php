<?php
// src/Controller/SystemeExploitationController.php

namespace App\Controller;

use App\Entity\SystemeExploitation;
use App\Form\SystemeExploitationType;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;

/**
 * Classe SystemeExploitationController
 *
 * @package App\Controller
 */
class SystemeExploitationController extends Controller {
    /**
     * @Route(
     *     "/systeme-exploitation/ajouter",
     *     name="base_materiel_systeme_exploitation_ajouter",
     * )
     *
     * @param Request $request
     *
     * @return RedirectResponse|Response
     */
    public function ajouter(Request $request): Response {
        $systemeExploitation = new SystemeExploitation();

        $form = $this->createForm(SystemeExploitationType::class, $systemeExploitation);

        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $em = $this
                ->getDoctrine()
                ->getManager()
            ;

            $em->persist($systemeExploitation);
            $em->flush();

            $this->addFlash('success', "Système d'exploitation ajouté avec succès.");

            return $this->redirectToRoute('base_materiel_systemes_exploitation');
        }

        return $this->render('systeme_exploitation/ajouter.html.twig', [
            'form' => $form->createView(),
        ]);
    }

    /**
     * @Route(
     *     "/systemes-exploitation",
     *     name="base_materiel_systemes_exploitation",
     * )
     *
     * @return Response
     */
    public function systemesExploitation(): Response {
        $systemeExploitationRepository = $this
            ->getDoctrine()
            ->getRepository(SystemeExploitation::class)
        ;

        $systemesExploitation = $systemeExploitationRepository->getSystemesExploitation();

        return $this->render('systeme_exploitation/systemes_exploitation.html.twig', [
            'systemes_exploitation' => $systemesExploitation,
        ]);
    }

    /**
     * @Route(
     *     "/systeme-exploitation/editer/{id}",
     *     name="base_materiel_systeme_exploitation_editer",
     *     requirements={
     *         "id": "\d+",
     *     },
     * )
     *
     * @param Request $request
     * @param int $id L'identifiant du système d'exploitation à éditer
     *
     * @return RedirectResponse|Response
     */
    public function editer(Request $request, int $id): Response {
        $em = $this
            ->getDoctrine()
            ->getManager()
        ;

        $systemeExploitationRepository = $em->getRepository(SystemeExploitation::class);

        $systemeExploitation = $systemeExploitationRepository->find($id);

        if ($systemeExploitation === null) {
            throw $this->createNotFoundException();
        }

        $form = $this->createForm(SystemeExploitationType::class, $systemeExploitation);

        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $em->flush();

            $this->addFlash('success', "Système d'exploitation modifié avec succès.");

            return $this->redirectToRoute('base_materiel_systemes_exploitation');
        }

        return $this->render('systeme_exploitation/editer.html.twig', [
            'form' => $form->createView(),
        ]);
    }

    /**
     * @Route(
     *     "/systeme-exploitation/supprimer/{id}",
     *     name="base_materiel_systeme_exploitation_supprimer",
     *     requirements={
     *         "id": "\d+",
     *     },
     * )
     *
     * @param Request $request
     * @param int $id L'identifiant du système d'exploitation à supprimer
     *
     * @return RedirectResponse|Response
     */
    public function supprimer(Request $request, int $id): Response {
        $em = $this
            ->getDoctrine()
            ->getManager()
        ;

        $systemeExploitationRepository = $em->getRepository(SystemeExploitation::class);

        $systemeExploitation = $systemeExploitationRepository->find($id);

        if ($systemeExploitation === null) {
            throw $this->createNotFoundException();
        }

        $form = $this->get('form.factory')->create();

        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $em->remove($systemeExploitation);
            $em->flush();

            $this->addFlash('success', "Système d'exploitation supprimé avec succès.");

            return $this->redirectToRoute('base_materiel_systemes_exploitation');
        }

        return $this->render('systeme_exploitation/supprimer.html.twig', [
            'systeme_exploitation' => $systemeExploitation,
            'form' => $form->createView(),
        ]);
    }
}
